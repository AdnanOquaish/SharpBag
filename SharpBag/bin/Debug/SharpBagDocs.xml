<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpBag</name>
    </assembly>
    <members>
        <member name="T:SharpBag.BagExtensions">
            <summary>
            A static class containing static extension methods for various types.
            </summary>
        </member>
        <member name="M:SharpBag.BagExtensions.HtmlSafe(System.String)">
            <summary>
            Makes the current instance HTML safe.
            </summary>
            <param name="s">The current instance.</param>
            <returns>An HTML safe string.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.HtmlSafe(System.String,System.Boolean)">
            <summary>
            Makes the current instance HTML safe.
            </summary>
            <param name="s">The current instance.</param>
            <param name="all">Whether to make all characters entities or just those needed.</param>
            <returns>An HTML safe string.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.HtmlSafe(System.String,System.Boolean,System.Boolean)">
            <summary>
            Makes the current instance HTML safe.
            </summary>
            <param name="s">The current instance.</param>
            <param name="all">Whether to make all characters entities or just those needed.</param>
            <param name="replace">Whether or not to encode spaces and line breaks.</param>
            <returns>An HTML safe string.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.Add``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1,System.Boolean)">
            <summary>
            Adds the specified key and value to the dictionary.
            If overwrite is true and the dictionary contains the specified key, the key's value will be overwritten.
            If overwrite is false and the dictionary contains the specified key, an exception won't be thrown.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
            <param name="D">The dictionary.</param>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
            <param name="overwrite">true if key's value should be overwritten; otherwise false.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Fill``1(``0[],``0)">
            <summary>
            Fills the current array with the specified value.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="array">The current instance.</param>
            <param name="value">The value to fill the array with.</param>
        </member>
        <member name="M:SharpBag.BagExtensions.Fill``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Fills the current array with the specified value.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="array">The current instance.</param>
            <param name="value">The value to fill the array with.</param>
        </member>
        <member name="M:SharpBag.BagExtensions.ReplaceAll(System.String,System.String,System.String)">
            <summary>
            Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string repeatedly until the new string no longer contains the specified string.
            </summary>
            <param name="s">The current instance.</param>
            <param name="oldValue">The string to be replaced.</param>
            <param name="newValue">The string to replace all occurrences of oldValue.</param>
            <returns>A string that is equivalent to the current string except that all instances of oldValue are repeatedly replaced with newValue until the new string no longer contains oldValue.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Words(System.String)">
            <summary>
            Returns all the words in the string.
            </summary>
            <param name="s">The current instance.</param>
            <returns>All the words in the string.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Lines(System.String)">
            <summary>
            Returns all the lines in the string.
            </summary>
            <param name="s">The current instance.</param>
            <returns>All the lines in the string.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.NoCarriageReturns(System.String)">
            <summary>
            Takes the string and removes all carriage returns ('\r').
            </summary>
            <param name="s">The current instance.</param>
            <returns>The string without carriage returns ('\r').</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.OneLineNoDoubleSpaceTrimmed(System.String)">
            <summary>
            Takes the string, replaces all line breaks with a space, then replaces all double spaces with a space and finally trims the string.
            </summary>
            <param name="s">The current instance.</param>
            <returns>The string in one line, with no double spaces, trimmed.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.ToUpper(System.Char)">
            <summary>
            Returns a copy of this System.Char converted to uppercase, using the casing rules of the current culture.
            </summary>
            <param name="c">The current instance.</param>
            <returns>A copy of this System.Char converted to uppercase.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.Split(System.String,System.String)">
            <summary>
            Returns a string array that contains the substrings in this string that are delimited by the specified string. A parameter specifies whether to return empty array elements.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">A string that delimits the substrings in this string.</param>
            <returns>An array whose elements contain the substrings in this string that are delimited by the separator.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Download(System.Uri)">
            <summary>
            Downloads the source of the Uri and returns it as a string.
            </summary>
            <param name="page">The source of the Uri.</param>
            <returns></returns>
        </member>
        <member name="M:SharpBag.BagExtensions.Split(System.String,System.String,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this string that are delimited by the specified string. A parameter specifies whether to return empty array elements.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">A string that delimits the substrings in this string.</param>
            <param name="options">RemoveEmptyEntries to omit empty array elements from the array returned; or None to include empty array elements in the array returned.</param>
            <returns>An array whose elements contain the substrings in this string that are delimited by the separator.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Split(System.String,System.Char)">
            <summary>
            Returns a string array that contains the substrings in this string that are delimited by the specified char. A parameter specifies whether to return empty array elements.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">A char that delimits the substrings in this string.</param>
            <returns>An array whose elements contain the substrings in this string that are delimited by the separator.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.Split(System.String,System.Char,System.StringSplitOptions)">
            <summary>
            Returns a string array that contains the substrings in this string that are delimited by the specified char. A parameter specifies whether to return empty array elements.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">A char that delimits the substrings in this string.</param>
            <param name="options">RemoveEmptyEntries to omit empty array elements from the array returned; or None to include empty array elements in the array returned.</param>
            <returns>An array whose elements contain the substrings in this string that are delimited by the separator.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.SplitIntoInts(System.String,System.String)">
            <summary>
            Splits the current string into substrings using the separator and then converts each substring into an int.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">The separator used to split the string into ints.</param>
            <returns>An array of the ints.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.SplitIntoInts(System.String,System.Char)">
            <summary>
            Splits the current string into substrings using the separator and then converts each substring into an int.
            </summary>
            <param name="s">The current instance.</param>
            <param name="separator">The separator used to split the string into ints.</param>
            <returns>An array of the ints.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.IsBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if the current instance is between, but not equal to, two integers.
            </summary>
            <param name="n">The current integers.</param>
            <param name="min">The lower boundary.</param>
            <param name="max">The upper boundary.</param>
            <returns>True if the current instance is between, but not equal to, the two integers; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.IsBetweenOrEqualTo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if the current instance is between or equal to two integers.
            </summary>
            <param name="n">The current integers.</param>
            <param name="min">The minimum integer.</param>
            <param name="max">The maximum integer.</param>
            <returns>True if the current instance is between or equal to the two integers; otherwise false.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagExtensions.WriteIntoFile(System.String,System.String)">
            <summary>
            Writes the string into the specified file.
            </summary>
            <param name="s">The current instance.</param>
            <param name="filename">The location of the file to be written to.</param>
        </member>
        <member name="M:SharpBag.BagExtensions.WriteIntoFile(System.String,System.String,System.Boolean)">
            <summary>
            Writes the string into the specified file.
            </summary>
            <param name="s">The current instance.</param>
            <param name="filename">The location of the file to be written to.</param>
            <param name="append">Wheter or not the string will be appended to the file.</param>
        </member>
        <member name="M:SharpBag.BagExtensions.ToSQLDateTime(System.DateTime)">
            <summary>
            Converts a DateTime object into an SQL compatible string.
            </summary>
            <param name="dt">The current instance.</param>
            <returns>An SQL formatted string.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.ToSQL(System.Data.DataTable,System.String)">
            <summary>
            Generates an SQL insert query for the current DataTable instance.
            </summary>
            <param name="dt">The current instance.</param>
            <param name="schema">The schema to insert into.</param>
            <returns>An SQL string.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.InsertInto(System.Data.DataTable,SharpBag.BagDB)">
            <summary>
            Inserts the current DataTable instance into the specified MySQL database.
            </summary>
            <param name="dt">The current instance.</param>
            <param name="db">The MySQL database to insert into.</param>
            <returns>How many rows were affected.</returns>
        </member>
        <member name="M:SharpBag.BagExtensions.SQLEscape(System.String)">
            <summary>
            Escapes the string for SQL insertion.
            </summary>
            <param name="s">The current instance.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="T:SharpBag.BagMath">
            <summary>
            A static class containing methods for doing calculations. 
            </summary>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircleF(System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircleF(System.Int32,System.Drawing.PointF)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Center">The center-point of the circle.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircleF(System.Int32,System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Points">Number of points to return.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircleF(System.Int32,System.Drawing.PointF,System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Center">The center-point of the circle.</param>
            <param name="Points">Number of points to return.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircle(System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircle(System.Int32,System.Drawing.Point)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Center">The center-point of the circle.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircle(System.Int32,System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Points">Number of points to return.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.PointsInCircle(System.Int32,System.Drawing.Point,System.Int32)">
            <summary>
            Find points in a circle with a specified radius.
            </summary>
            <param name="Radius">The radius of the circle.</param>
            <param name="Center">The center-point of the circle.</param>
            <param name="Points">Number of points to return.</param>
            <returns>An array containing points.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SharpBag.BagMath.WaveLength(System.Double)">
            <summary>
            Calculates wave length from the average fluctuation time.
            </summary>
            <param name="Tz">The average fluctuation time (Tz).</param>
            <returns>The length of the wave.</returns>
        </member>
        <member name="M:SharpBag.BagMath.Gcd(System.Int32,System.Int32)">
            <summary>
            Finds the greatest common divisor (gcd) of two integers.
            </summary>
            <param name="a">An integer.</param>
            <param name="b">An integer.</param>
            <returns>The greatest commond divisor (gcd) of the two integers.</returns>
        </member>
        <member name="M:SharpBag.BagMath.GreatestCommonDivisor(System.Int32,System.Int32)">
            <summary>
            Finds the greatest common divisor (gcd) of two integers.
            </summary>
            <param name="a">An integer.</param>
            <param name="b">An integer.</param>
            <returns>The greatest commond divisor (gcd) of the two integers.</returns>
        </member>
        <member name="T:SharpBag.BagMath.BaseConverter">
            <summary>
            Converts numbers between bases.
            </summary>
        </member>
        <member name="M:SharpBag.BagMath.BaseConverter.ToBase(System.String,System.Int32,System.Int32)">
            <summary>
            Converts the specified number from the specified start base to the specified target base.
            </summary>
            <param name="number">The number as a string.</param>
            <param name="start_base">The base of the number.</param>
            <param name="target_base">The base to convert to.</param>
            <returns>The specified number in the specified target base.</returns>
        </member>
        <member name="M:SharpBag.BagMath.BaseConverter.ToBase10(System.String,System.Int32)">
            <summary>
            Converts the specified number from the specified start base to base 10.
            </summary>
            <param name="number">The number as a string.</param>
            <param name="start_base">The base of the number.</param>
            <returns>The number in base 10.</returns>
        </member>
        <member name="M:SharpBag.BagMath.BaseConverter.FromBase10(System.Int32,System.Int32)">
            <summary>
            Converts the specified base 10 number to the specified target base.
            </summary>
            <param name="number">The base 10 number.</param>
            <param name="target_base">The target base.</param>
            <returns>The target in the target base.</returns>
        </member>
        <member name="T:SharpBag.BagLogger">
            <summary>
            A class used for application logging.
            </summary>
        </member>
        <member name="M:SharpBag.BagLogger.#ctor(SharpBag.BagLogger.LogFunction,System.Boolean)">
            <summary>
            A class used for application logging.
            </summary>
            <param name="logger"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:SharpBag.BagLogger.Log(System.String)">
            <summary>
            Log the specified string.
            </summary>
            <param name="s">The string to be logged.</param>
        </member>
        <member name="M:SharpBag.BagLogger.LogIf(System.Boolean,System.String)">
            <summary>
            Log the specified string if expression is true.
            </summary>
            <param name="expression">An expression.</param>
            <param name="s">The string to be logged.</param>
        </member>
        <member name="M:SharpBag.BagLogger.LogIfNot(System.Boolean,System.String)">
            <summary>
            Log the specified string if expression is false.
            </summary>
            <param name="expression">An expression.</param>
            <param name="s">The string to be logged.</param>
        </member>
        <member name="P:SharpBag.BagLogger.Logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="P:SharpBag.BagLogger.Timestamp">
            <summary>
            Whether to prepend a timestamp on the output string or not.
            </summary>
        </member>
        <member name="P:SharpBag.BagLogger.Timeformat">
            <summary>
            The format of the timestamp. See DateTime.ToString().
            </summary>
        </member>
        <member name="P:SharpBag.BagLogger.Enabled">
            <summary>
            Whether the logger is enabled or not.
            </summary>
        </member>
        <member name="T:SharpBag.BagLogger.LogFunction">
            <summary>
            A function used for logging.
            </summary>
            <param name="s">The output string that needs to be handled.</param>
        </member>
        <member name="T:SharpBag.BagS">
            <summary>
            A static class containing settings and other related data.
            </summary>
        </member>
        <member name="F:SharpBag.BagS.NL">
            <summary>
            Gets the newline string defined for this environment.
            </summary>
        </member>
        <member name="T:SharpBag.BagDB">
            <summary>
            A class for working with MySQL databases.
            </summary>
        </member>
        <member name="M:SharpBag.BagDB.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            The main BagDB constructor.
            </summary>
            <param name="server">The server to connect to.</param>
            <param name="schema">The default schema.</param>
            <param name="username">The username used to connect.</param>
            <param name="password">The password used to connect.</param>
        </member>
        <member name="M:SharpBag.BagDB.Connect">
            <summary>
            Connects, or reconnects, to the MySQL database.
            </summary>
        </member>
        <member name="M:SharpBag.BagDB.Query(System.String)">
            <summary>
            Send a query to the MySQL database.
            </summary>
            <param name="q">The query string.</param>
            <returns>A DataTable object with the results from the query.</returns>
        </member>
        <member name="M:SharpBag.BagDB.QuerySingle(System.String)">
            <summary>
            Send a query to the MySQL database and only return the first column of the first row.
            </summary>
            <param name="q">The query string.</param>
            <returns>The first column of the first row.</returns>
        </member>
        <member name="M:SharpBag.BagDB.QuerySingle``1(System.String)">
            <summary>
            Send a query to the MySQL database and only return the first column of the first row casted to T.
            </summary>
            <typeparam name="T">The type of the first column.</typeparam>
            <param name="q">The query string.</param>
            <returns>The first column of the first row casted to T.</returns>
        </member>
        <member name="M:SharpBag.BagDB.Execute(System.String)">
            <summary>
            Executes a query on the MySQL database and returns how many rows were affected.
            </summary>
            <param name="q">The query to execute.</param>
            <returns>How many rows were affected.</returns>
        </member>
        <member name="M:SharpBag.BagDB.Close">
            <summary>
            Kills the current thread and then closes the MySQL connection.
            </summary>
        </member>
        <member name="M:SharpBag.BagDB.DateTimeToSQL(System.DateTime)">
            <summary>
            Converts a DateTime object into an SQL compatible string.
            </summary>
            <param name="dt">The DateTime object.</param>
            <returns>An SQL formatted string.</returns>
        </member>
        <member name="P:SharpBag.BagDB.Server">
            <summary>
            The server to connect to.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.Schema">
            <summary>
            The default schema.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.Username">
            <summary>
            The username used to connect.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.Password">
            <summary>
            The password used to connect.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.CommandTimeout">
            <summary>
            The time before the MySQL connection times out.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.State">
            <summary>
            The state of the MySQL connection.
            </summary>
        </member>
        <member name="P:SharpBag.BagDB.Connection">
            <summary>
            The MySQL connection.
            </summary>
        </member>
        <member name="T:SharpBag.BagTools.BencodeDecoder">
            <summary>
            A class used for decoding Bencoding.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.#ctor(System.String)">
            <summary>
            The main constructor.
            </summary>
            <param name="s">The bencoded string to decode.</param>
        </member>
        <member name="F:SharpBag.BagTools.BencodeDecoder.Index">
            <summary>
            Where the reader will start reading next.
            </summary>
        </member>
        <member name="F:SharpBag.BagTools.BencodeDecoder.BencodedString">
            <summary>
            The bencoded string.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.Decode">
            <summary>
            Decodes the string.
            </summary>
            <returns>An array of root elements.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.ReadElement">
            <summary>
            Reads and element.
            </summary>
            <returns>The element that was read.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.ReadDictionary">
            <summary>
            Reads a dictionary.
            </summary>
            <returns>The dictionary that was read.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.ReadList">
            <summary>
            Reads a list.
            </summary>
            <returns>The list that was read.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.ReadInteger">
            <summary>
            Reads an integer.
            </summary>
            <returns>The integer that was read.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.ReadString">
            <summary>
            Reads a string.
            </summary>
            <returns>The string that was read.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BencodeDecoder.Error(System.Exception)">
            <summary>
            Generates an error.
            </summary>
            <param name="e">The inner exception.</param>
            <returns>An exception that can then be thrown.</returns>
        </member>
        <member name="T:SharpBag.BagTools.IBElement">
            <summary>
            A bencode element.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.IBElement.ToBencodedString">
            <summary>
            Generates the bencoded equivalent of the element.
            </summary>
            <returns>The bencoded equivalent of the element.</returns>
        </member>
        <member name="T:SharpBag.BagTools.BInteger">
            <summary>
            A bencode integer.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BInteger.#ctor(System.Int64)">
            <summary>
            The main constructor.
            </summary>
            <param name="value">The value of the bencoded integer.</param>
        </member>
        <member name="M:SharpBag.BagTools.BInteger.ToBencodedString">
            <summary>
            Generates the bencoded equivalent of the integer.
            </summary>
            <returns>The bencoded equivalent of the integer.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BInteger.ToString">
            <summary>
            
            </summary>
            <returns></returns>
            <see cref="M:System.Object.ToString"/>
        </member>
        <member name="P:SharpBag.BagTools.BInteger.Value">
            <summary>
            The value of the bencoded integer.
            </summary>
        </member>
        <member name="T:SharpBag.BagTools.BString">
            <summary>
            A bencode string.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BString.#ctor(System.String)">
            <summary>
            The main constructor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpBag.BagTools.BString.ToBencodedString">
            <summary>
            Generates the bencoded equivalent of the string.
            </summary>
            <returns>The bencoded equivalent of the string.</returns>
        </member>
        <member name="M:SharpBag.BagTools.BString.ToString">
            <summary>
            
            </summary>
            <returns></returns>
            <see cref="M:System.Object.ToString"/>
        </member>
        <member name="P:SharpBag.BagTools.BString.Value">
            <summary>
            The value of the bencoded integer.
            </summary>
        </member>
        <member name="T:SharpBag.BagTools.BList">
            <summary>
            A bencode list.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BList.ToBencodedString">
            <summary>
            Generates the bencoded equivalent of the list.
            </summary>
            <returns>The bencoded equivalent of the list.</returns>
        </member>
        <member name="T:SharpBag.BagTools.BDictionary">
            <summary>
            A bencode dictionary.
            </summary>
        </member>
        <member name="M:SharpBag.BagTools.BDictionary.ToBencodedString">
            <summary>
            Generates the bencoded equivalent of the dictionary.
            </summary>
            <returns>The bencoded equivalent of the dictionary.</returns>
        </member>
        <member name="T:SharpBag.BagNet.BagNet">
            <summary>
            A static class for working with internet communications and such.
            </summary>
        </member>
        <member name="M:SharpBag.BagNet.BagNet.DownloadPage(System.Uri)">
            <summary>
            Gets a response object from the specified page. The object can the be used to read data from the page.
            </summary>
            <param name="page">The page to get response from.</param>
            <returns>The response object of from the page.</returns>
        </member>
        <member name="T:SharpBag.BagFK.Kennitala">
            <summary>
            Klasi fyrir kennitölur.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.Dagur">
            <summary>
            Fyrir hvaða dag er kennitalan.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.Manudur">
            <summary>
            Fyrir hvaða mánuð er kennitalan.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.Ar">
            <summary>
            Fyrir hvaða ár er kennitalan.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.Lokatala">
            <summary>
            4 stafa lokatala kennitölunar.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.ErILagi">
            <summary>
            Hvort kennitalan sé gild.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.Kennitala.Stjornumerki">
            <summary>
            Stjörnumerki kennitölunar.
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.Kennitala.#ctor(System.String)">
            <summary>
            Smiður kennitölu-klasans.
            </summary>
            <param name="kt">Kennitalan sem strengur (ddmmyy-nnnn).</param>
        </member>
        <member name="M:SharpBag.BagFK.Kennitala.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Smiður kennitölu-klasans.
            </summary>
            <param name="ar">Ár kennitölunnar.</param>
            <param name="manudur">Mánuður kennitölunnar.</param>
            <param name="dagur">Dagur kennitölunnar.</param>
            <param name="lokatala">4 stafa lokatala kennitölunnar.</param>
        </member>
        <member name="M:SharpBag.BagFK.Kennitala.ErRett(System.String)">
            <summary>
            Tekur inn streng sem inniheldur hugsanlega kennitölu og skilar true ef það er kennitala; annars false.
            </summary>
            <param name="kt">Strengur sem inniheldur hugsanlega kennitölu.</param>
            <returns>True ef strengurinn er kennitala; annars false.</returns>
        </member>
        <member name="M:SharpBag.BagFK.Kennitala.ToString(System.Boolean)">
            <summary>
            Skilar kennitölunni með eða án - sem streng.
            </summary>
            <param name="skiptir">Hvort nota eigi - eða ekki.</param>
            <returns>Kennitalan sem strengur.</returns>
        </member>
        <member name="M:SharpBag.BagFK.Kennitala.ToString">
            <summary>
            Skilar kennitölunni með - sem streng.
            </summary>
            <returns>Kennitalan sem strengur.</returns>
        </member>
        <member name="T:SharpBag.BagFK.StærstaRunuSumma">
            <summary>
            Klasi sem finnur stærstu runu-summu.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.StærstaRunuSumma.Runa">
            <summary>
            Runan.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.StærstaRunuSumma.StærstaSumma">
            <summary>
            Stærsta runu-summan.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.StærstaRunuSumma.StærstuRunur">
            <summary>
            Allar stærstu runurnar.
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.StærstaRunuSumma.#ctor(System.Int32[])">
            <summary>
            Smiður fyrir StærstaRunuSumma-klasann.
            </summary>
            <param name="runa">Array af tölum.</param>
        </member>
        <member name="M:SharpBag.BagFK.StærstaRunuSumma.#ctor(System.Collections.Generic.List{System.Int32})">
            <summary>
            Smiður fyrir StærstaRunuSumma-klasann.
            </summary>
            <param name="runa">Listi af tölum.</param>
        </member>
        <member name="M:SharpBag.BagFK.StærstaRunuSumma.FinnaStærstuSummu">
            <summary>
            Finnur stærstu summuna.
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.StærstaRunuSumma.Moguleikar">
            <summary>
            Finnur allar mögulegar runur.
            </summary>
            <returns>Allar mögulegar runur.</returns>
        </member>
        <member name="T:SharpBag.BagFK.Minesweeper">
            <summary>
            Method sem gætu verið notuð fyrir Minesweeper leikinn
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.Minesweeper.ManyBombsAround(System.String[0:,0:],System.String,System.Int32,System.Int32)">
            <summary>
            Gáir hvað margar sprengjur eru í kringum reit
            </summary>
            <param name="field">Spilaborðið</param>
            <param name="bomb">Hvernig sprengjan er</param>
            <param name="x">X-hnitin á reitnum</param>
            <param name="y">Y-hnitin á reitnum</param>
            <returns>Hversu margar sprengjur eru í kringum reitinn</returns>
        </member>
        <member name="M:SharpBag.BagFK.Minesweeper.OnField(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Athugar hvort hnit séu inná borðinu
            </summary>
            <param name="w">Breydd borðsins</param>
            <param name="h">Hæð borðsins</param>
            <param name="x">X-hnitið</param>
            <param name="y">Y-hnitið</param>
            <returns>Hvort hnitin séu inná borðinu</returns>
        </member>
        <member name="T:SharpBag.BagFK.DrawObjects">
            <summary>
            Allskonar method til að teikna hluti
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.DrawObjects.Triangle(System.Int32,System.String,System.String,SharpBag.BagFK.DrawObjects.TriangleType)">
            <summary>
            Teiknar þríhyrninga
            </summary>
            <param name="height">Hæð þríhyrningsins</param>
            <param name="s">Strengurinn sem er notaður inní þríhyrningnum</param>
            <param name="p">Strengurinn sem er notaður fyrir utan þríhyrninginn</param>
            <param name="TT">Týpan af þríhyrningi</param>
            <returns>Þríhyrningurinn</returns>
            <example>Triangle(5, "*", " ", TriangleType.Top)</example>
        </member>
        <member name="M:SharpBag.BagFK.DrawObjects.Square(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Teiknar kassa
            </summary>
            <param name="height">Hæðin á kassanum</param>
            <param name="width">Breyddin á kassanum</param>
            <param name="s">Strengurinn sem er inní kassanum</param>
            <param name="p">Strengurinn sem er innæi kassanum ef hann er ekki fylltur</param>
            <param name="filled">Bool um hvort hann sé fylltur eða ekki</param>
            <returns>Kassinn</returns>
            <example>Square(5, 4, "*", " ", false)</example>
        </member>
        <member name="T:SharpBag.BagFK.DrawObjects.TriangleType">
            <summary>
            Gerðir af þríhyrningum. Heitir eftir því í hvaða horni eða brún á kassa þríhyrningurinn væri.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.Top">
            <summary>
            Þríhyrningur sem er með langhliðina á toppnum.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.Left">
            <summary>
            Þríhyrningur sem er með langhliðina til vinstri.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.Right">
            <summary>
            Þríhyrningur sem er með langhliðina til hægri.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.Bottom">
            <summary>
            Þríhyrningur sem er með langhliðina á botninum.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.TopLeft">
            <summary>
            Þríhyrningur sem er með bendir upp í efra vinstra hornið.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.TopRight">
            <summary>
            Þríhyrningur sem er með bendir upp í efra hægra hornið.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.BottomLeft">
            <summary>
            Þríhyrningur sem er með bendir upp í neðra vinstra hornið.
            </summary>
        </member>
        <member name="F:SharpBag.BagFK.DrawObjects.TriangleType.BottomRight">
            <summary>
            Þríhyrningur sem er með bendir upp í neðra hægra hornið.
            </summary>
        </member>
        <member name="T:SharpBag.BagFK.Tools">
            <summary>
            Allskonar verkfæri
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.Tools.MergeStrings(System.String,System.String)">
            <summary>
            Mergar tvo strengi saman (mega vera margra lína)
            </summary>
            <param name="a">Fyrri strengurinn</param>
            <param name="b">Seinni strengurinn</param>
            <returns>Strengirnir saman</returns>
        </member>
        <member name="M:SharpBag.BagFK.Tools.MakeLength(System.String,System.Int32,System.Char)">
            <summary>
            Lætur strenginn verða ákveðið langann hvort sem hann er lengri eða styttri fyrir
            </summary>
            <param name="s"></param>
            <param name="length">Lengdin sem strengurinn verður</param>
            <param name="fill">Stafur sem notaður er til að fylla upp í ef að strengurinn er of stuttur</param>
            <returns>Strengurinn með rétta lengd</returns>
        </member>
        <member name="M:SharpBag.BagFK.Tools.TwoDArrayOutput(System.String[0:,0:])">
            <summary>
            Tekur inn 2D array og skilar því sem streng
            </summary>
            <param name="a">2D array</param>
            <returns>Arrayið sem strengur</returns>
            <example>{
            {"a","b","c"},
            {"a","b","c"},
            {"a","b","c"}
            }
            verður:
            abc
            abc
            abc</example>
        </member>
        <member name="T:SharpBag.BagFK.Stæ">
            <summary>
            Stærðfræði-tengd method
            </summary>
        </member>
        <member name="M:SharpBag.BagFK.Stæ.HefjaIVeldi(System.Double,System.Int32)">
            <summary>
            Hefur N í veldið veldi
            </summary>
            <param name="N">Talan</param>
            <param name="veldi">Veldið sem talan á að fara í</param>
            <returns></returns>
        </member>
        <member name="M:SharpBag.BagFK.Stæ.PI">
            <summary>
            PI
            </summary>
            <returns>PI</returns>
        </member>
    </members>
</doc>
