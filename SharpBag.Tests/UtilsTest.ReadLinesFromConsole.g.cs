// <copyright file="UtilsTest.ReadLinesFromConsole.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System.IO;
using Microsoft.Pex.Engine.Exceptions;

namespace SharpBag
{
    public partial class UtilsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(UtilsTest))]
public void ReadLinesFromConsole864()
{
    IEnumerable<string> iEnumerable;
    iEnumerable = this.ReadLinesFromConsole();
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(UtilsTest))]
public void ReadLinesFrom335()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      StringReader stringReader;
      IEnumerable<string> iEnumerable;
      stringReader = new StringReader("");
      disposables.Add((IDisposable)stringReader);
      iEnumerable = this.ReadLinesFrom((TextReader)stringReader);
      disposables.Dispose();
      Assert.IsNotNull((object)iEnumerable);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(UtilsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ReadLinesFromThrowsContractException838()
{
    try
    {
      IEnumerable<string> iEnumerable;
      iEnumerable = this.ReadLinesFrom((TextReader)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
