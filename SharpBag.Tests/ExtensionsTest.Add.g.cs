// <copyright file="ExtensionsTest.Add.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace SharpBag
{
    public partial class ExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add60901()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add29601()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[1021] = 0;
    this.Add<int, int>(dictionary, 764, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add88501()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, true);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Add02()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(13798);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add60902()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add29602()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[1021] = 0;
    this.Add<int, int>(dictionary, 764, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add88502()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, true);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Add03()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(13798);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add60903()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add29603()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[1021] = 0;
    this.Add<int, int>(dictionary, 764, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add88503()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, true);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Add04()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(13798);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void AddThrowsContractException551()
{
    try
    {
      this.Add<int, int>((Dictionary<int, int>)null, 0, 0, false);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add60904()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add29604()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[1021] = 0;
    this.Add<int, int>(dictionary, 764, 0, false);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Add88504()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(0);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, true);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Add05()
{
    Dictionary<int, int> dictionary;
    dictionary = new Dictionary<int, int>(13798);
    dictionary[0] = 0;
    this.Add<int, int>(dictionary, 0, 0, false);
}
    }
}
