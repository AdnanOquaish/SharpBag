// <copyright file="ExtensionsTest.To01.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace SharpBag
{
    public partial class ExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To20301()
{
    IEnumerable<int> iEnumerable;
    iEnumerable = this.To(0, 1, 1);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To46301()
{
    IEnumerable<int> iEnumerable;
    iEnumerable = this.To(0, 0, 1);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To72301()
{
    IEnumerable<int> iEnumerable;
    iEnumerable = this.To(512, 1, 1);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ToThrowsContractException891()
{
    try
    {
      IEnumerable<int> iEnumerable;
      iEnumerable = this.To(0, 0, 0);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To0120301()
{
    IEnumerable<long> iEnumerable;
    iEnumerable = this.To01(0L, 1L, 1L);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To0146301()
{
    IEnumerable<long> iEnumerable;
    iEnumerable = this.To01(0L, 0L, 1L);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void To0163701()
{
    IEnumerable<long> iEnumerable;
    iEnumerable = this.To01(1182194902453190656L, -8041177134401585151L, 1L);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void To01ThrowsContractException635()
{
    try
    {
      IEnumerable<long> iEnumerable;
      iEnumerable = this.To01(0L, 0L, 0L);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
