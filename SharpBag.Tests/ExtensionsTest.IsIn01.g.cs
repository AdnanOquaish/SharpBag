// <copyright file="ExtensionsTest.IsIn01.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
//
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
//
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.Pex.Engine.Exceptions;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace SharpBag
{
    public partial class ExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void Is37301()
{
    bool b;
    b = this.Is<object>((object)null);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void IsIn013401()
{
    bool b;
    int[] ints = new int[0];
    b = this.IsIn01<int>(0, ints);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void IsIn0157001()
{
    bool b;
    int[] ints = new int[1];
    b = this.IsIn01<int>(0, ints);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void IsIn01ThrowsContractException541()
{
    try
    {
      bool b;
      b = this.IsIn01<int>(0, (int[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void IsIn3401()
{
    bool b;
    int[] ints = new int[0];
    b = this.IsIn<int>(0, (IEnumerable<int>)ints);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
public void IsIn57001()
{
    bool b;
    int[] ints = new int[1];
    b = this.IsIn<int>(0, (IEnumerable<int>)ints);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void IsInThrowsContractException401()
{
    try
    {
      bool b;
      b = this.IsIn<int>(0, (IEnumerable<int>)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}