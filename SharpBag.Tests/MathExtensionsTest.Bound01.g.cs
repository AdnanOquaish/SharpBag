// <copyright file="MathExtensionsTest.Bound01.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace SharpBag.Math
{
    public partial class MathExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound01415()
{
    double d;
    d = this.Bound01(0, 1, 0);
    Assert.AreEqual<double>(1, d);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound01232()
{
    double d;
    d = this.Bound01(0, 0, -1);
    Assert.AreEqual<double>(-1, d);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound01171()
{
    double d;
    d = this.Bound01(0, 0, 0);
    Assert.AreEqual<double>(0, d);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound415()
{
    int i;
    i = this.Bound(0, 1, 0);
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound8()
{
    int i;
    i = this.Bound(1022, 1022, 510);
    Assert.AreEqual<int>(510, i);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void Bound171()
{
    int i;
    i = this.Bound(0, 0, 0);
    Assert.AreEqual<int>(0, i);
}
    }
}
