// <copyright file="MathExtensionsTest.CollatzCount01.g.cs" company="SuprDewd">Copyright © SuprDewd 2010</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace SharpBag.Math
{
    public partial class MathExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void CollatzCount01530()
{
    long l;
    l = this.CollatzCount01(2834388054095952895L);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount01735()
{
    long l;
    l = this.CollatzCount01(2L);
    Assert.AreEqual<long>(1L, l);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount01606()
{
    long l;
    l = this.CollatzCount01(1L);
    Assert.AreEqual<long>(0L, l);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount01510()
{
    long l;
    l = this.CollatzCount01(0L);
    Assert.AreEqual<long>(0L, l);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount132()
{
    int i;
    i = this.CollatzCount(3);
    Assert.AreEqual<int>(7, i);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount735()
{
    int i;
    i = this.CollatzCount(2);
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount606()
{
    int i;
    i = this.CollatzCount(1);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(MathExtensionsTest))]
public void CollatzCount510()
{
    int i;
    i = this.CollatzCount(0);
    Assert.AreEqual<int>(0, i);
}
    }
}
